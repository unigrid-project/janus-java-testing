name: Set version & Remove snapshot

on:
  workflow_dispatch:
    inputs:
      distinct_id:
        type: string
        description: 'distinct_id used by return-dispatch'
      target_module:
        description: 'Target module'
        type: choice
        options:
        - bootstrap
        - fx
      tag_name:
        description: 'New version'
        required: false
      generate_backup_poms:
        type: boolean
        description: Generate backup poms
        default: false
      update_matching_versions:
        type: boolean
        description: Update matching versions
        default: false

env:
  skip_fx: false
  skip_bootstrap: false
  skip_desktop: false

jobs:
  set-version:
    name: Set version
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: echo distinct ID ${{ inputs.distinct_id }}
        if: inputs.distinct_id != ''
        run: echo ${{ inputs.distinct_id }}

      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.6

      - name: Requires config build
        run: xvfb-run -a mvn -f config/pom.xml install -Dcheckstyle.skip -Dmaven.test.skip=true

      - name: Remove snapshot and set version
        run: |
          if [[ ${{ inputs.target_module }} == 'fx' ]]; then
            export skip_bootstrap=true
            export skip_desktop=true
          elif [[ ${{ inputs.target_module }} == 'bootstrap' ]]; then
            export skip_fx=true
          fi

          mvn -f pom.xml versions:set -DremoveSnapshot=true -DgenerateBackupPoms=${{ inputs.generate_backup_poms }} -DupdateMatchingVersions=${{ inputs.update_matching_versions }}

          if [ -n "${{ inputs.tag_name }}" ]; then
            export version="${{ inputs.tag_name }}"
            export version=$(echo "${version#*v}" | awk -F. '{print $1"."$2"."$3+0}')
          fi

          for module in fx bootstrap desktop; do
            mvn -f $module/pom.xml versions:set -DremoveSnapshot=true -DgenerateBackupPoms=${{ inputs.generate_backup_poms }} -DupdateMatchingVersions=${{ inputs.update_matching_versions }}
            if [[ $(printenv skip_$module) != true && $version != '' ]]; then
              mvn -f $module/pom.xml versions:set -DnewVersion=$version -DgenerateBackupPoms=${{ inputs.generate_backup_poms }} -DupdateMatchingVersions=${{ inputs.update_matching_versions }}
            fi
          done

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Github actions - ${{ github.workflow }}

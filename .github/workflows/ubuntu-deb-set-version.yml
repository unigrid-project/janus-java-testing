name: Set version & Remove snapshot

on:
  repository_dispatch:
    types:
    - dispatch-set-version
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name (vX.Y.Z)'
        required: true
      parent_tag:
        description: 'Parent tag (vX.Y.Z)'
        required: false
      skip_fx:
        type: boolean
        description: Skip setting new fx version
        default: false
      skip_bootstrap:
        type: boolean
        description: Skip setting new bootstrap version
        default: false
      skip_desktop:
        type: boolean
        description: Skip setting new desktop version
        default: false
      generate_backup_poms:
        type: boolean
        description: Generate backup poms
        default: false
      update_matching_versions:
        type: boolean
        description: Update matching versions
        default: false

env:
  skip_fx: ${{ inputs.skip_fx }}
  skip_bootstrap: ${{ inputs.skip_bootstrap }}
  skip_desktop: ${{ inputs.skip_desktop }}

jobs:
  set-version:
    name: Set version
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.6

      - name: Version checks
        run: |
          java --version
          mvn -v

      - name: Requires config build
        run: xvfb-run -a mvn -f config/pom.xml install -Dcheckstyle.skip -Dmaven.test.skip=true

      - name: Remove snapshot and set version
        run: |
          if [[ ${{ github.event.client_payload.target_module }} == 'fx' ]]; then
            export skip_bootstrap=true
            export skip_desktop=true
          elif [[ ${{ github.event.client_payload.target_module }} == 'bootstrap' ]]; then
            export skip_fx=true
          fi

          mvn -f pom.xml versions:set -DremoveSnapshot=true -DgenerateBackupPoms=${{ inputs.generate_backup_poms }} -DupdateMatchingVersions=${{ inputs.update_matching_versions }}

          if [[ ${{ inputs.parent_tag }}${{ github.event.client_payload.parent_tag }} != '' ]]; then
            export version_parent=$(echo ${{ inputs.parent_tag }}${{ github.event.client_payload.parent_tag }} | cut --complement -c 1)
            mvn -f pom.xml versions:set -DnewVersion=$version_parent -DgenerateBackupPoms=${{ inputs.generate_backup_poms }} -DupdateMatchingVersions=${{ inputs.update_matching_versions }}
          fi

          export version=$(echo ${{ inputs.tag_name }}${{ github.event.client_payload.tag_name }} | cut --complement -c 1)

          for module in fx bootstrap desktop; do
            mvn -f $module/pom.xml versions:set -DremoveSnapshot=true -DgenerateBackupPoms=${{ inputs.generate_backup_poms }} -DupdateMatchingVersions=${{ inputs.update_matching_versions }}
            if [[ $(printenv skip_$module) != true ]]; then
              mvn -f $module/pom.xml versions:set -DnewVersion=$version -DgenerateBackupPoms=${{ inputs.generate_backup_poms }} -DupdateMatchingVersions=${{ inputs.update_matching_versions }}
            fi
          done
          

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Github actions - ${{ github.workflow }}

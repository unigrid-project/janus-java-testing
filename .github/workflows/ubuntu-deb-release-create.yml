name: Release create

on:
  workflow_dispatch:
    inputs:
      distinct_id:
        type: string
        description: 'distinct_id used by return-dispatch'
      target_module:
        description: 'Target module'
        type: choice
        options:
        - bootstrap
        - fx
      bump:
        description: 'Bump version'
        type: choice
        options:
        - Revision
        - Minor
        - Major

env:
  tag_delimeter: '-'
  GH_TOKEN: ${{ secrets.ACTION_PAT }}

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: echo distinct ID ${{ inputs.distinct_id }}
        if: inputs.distinct_id != ''
        run: echo ${{ inputs.distinct_id }}

      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.6

      - name: Requires config build
        run: xvfb-run -a mvn -f config/pom.xml install -Dcheckstyle.skip -Dmaven.test.skip=true

      - name: Get latest commit and tags
        run: |
          git fetch
          git fetch --tags
          git checkout master

      - name: Create release on Minor or Major bump
        if: inputs.bump != 'Revision'
        run: |
          $(git tag --list --sort=-version:refname "v*-*" | head -n 1)
          for tag in $(git tag --list --sort=-version:refname "v*-*" | head -n 1); do
            echo "$tag"
            gh release create "$tag" -d -p -t "$tag" --generate-notes
          done

      - name: Set env for Revision bump
        if: inputs.bump == 'Revision'
        run: |
          echo "tag_name=$(git tag --sort=-version:refname "v*-${{ inputs.target_module }}" | head -n 1)" >> $GITHUB_ENV
          echo "second_latest_commit=$(git show --no-patch --format="%H" HEAD~1)" >> $GITHUB_ENV

      - uses: ncipollo/release-action@v1
        name: Revision release
        with:
          name: ${{ env.tag_name }}
          tag: ${{ env.tag_name }}
          commit: ${{ env.second_latest_commit }}
          generateReleaseNotes: true
          draft: true

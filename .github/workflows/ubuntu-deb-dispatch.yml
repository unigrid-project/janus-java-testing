name: Dispatcher

on:
  workflow_dispatch:
    inputs:
      target_module:
        description: 'Target module'
        type: choice
        options:
        - bootstrap
        - fx
      tag_delimeter:
        type: string
        description: 'Delimeter for tag'
        required: true
        default: '-'
      tag_name:
        type: string
        description: 'Tag name (vX.Y.Z) for Janus'
        required: true
        default: 'v1.0.30'
      parent_tag:
        type: string
        description: 'Parent tag (vX.Y.Z)'
        required: false
        default: 'v1.0.35'
      janus_repo:
        type: string
        description: 'Janus repository'
        default: 'janus-java-testing'
        required: true
      update_repo:
        type: string
        description: 'Update repository'
        default: 'unigrid-update-testing'
        required: true
      janus_branch:
        type: string
        description: 'Janus branch'
        default: 'master'
        required: true
      update_branch:
        type: string
        description: 'Update branch'
        default: 'main'
        required: true
      skip_test:
        type: boolean
        description: Skip test
        default: false

env:
  GH_TOKEN: ${{ secrets.ACTION_PAT }}
  owner: unigrid-project

jobs:
  dispatcher:
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      max-parallel: 1
      matrix:
        release: ['test', 'set-version', 'create-release', 'upload', 'bump', 'update-config']
        include:
          - release: test
            name: Test suite
            event: dispatch-test
            inputs: '{"skip_fx": "false","skip_bootstrap": "false","skip_desktop": "false","skip_config": "false","skip_checkstyle": "false"}'
            payload: '{"skip_test": "${{ inputs.skip_test }}"}'
            check: 'Maven test'
            workflow: 'ubuntu-deb-test-suite.yml'
            repo: '${{ inputs.janus_repo }}'
            branch: '${{ inputs.janus_branch }}'

          - release: set-version
            name: Set version & Remove snapshot
            event: dispatch-set-version
            inputs: '{"target_module": "${{ inputs.target_module }}","tag_name": "${{ inputs.tag_name }}","parent_tag": "${{ inputs.parent_tag }}"}'
            check: 'Set version'
            workflow: 'ubuntu-deb-set-version.yml'
            repo: '${{ inputs.janus_repo }}'
            branch: '${{ inputs.janus_branch }}'

          - release: create-release
            name: Create release & tag
            event: dispatch-release
            inputs: '{"tag_name": "${{ inputs.tag_name }}${{ inputs.tag_delimeter }}${{ inputs.target_module }}","parent_tag": "${{ inputs.parent_tag }}"}'
            check: 'Create release'
            workflow: 'ubuntu-deb-release-create.yml'
            repo: '${{ inputs.janus_repo }}'
            branch: '${{ inputs.janus_branch }}'

          - release: upload
            name: Upload to release tag
            event: dispatch-upload
            inputs: '{"tag_name": "${{ inputs.tag_name }}","tag_delimeter": "${{ inputs.tag_delimeter }}","target_module": "${{ inputs.target_module }}","skip_ubuntu": "false","skip_windows": "false","skip_macos": "false"}'
            check: 'Upload to release'
            workflow: 'upload.yml'
            repo: '${{ inputs.janus_repo }}'
            branch: '${{ inputs.janus_branch }}'

          - release: bump
            name: Bump version
            event: dispatch-bump
            inputs: '{"target_module": "${{ inputs.target_module }}"}'
            check: 'Bump'
            workflow: 'ubuntu-deb-bump.yml'
            repo: '${{ inputs.janus_repo }}'
            branch: '${{ inputs.janus_branch }}'

          - release: update-config
            name: Update config files
            event: dispatch-update-config
            inputs: '{"branch": "${{ inputs.update_branch }}"}'
            check: 'Update config'
            workflow: 'ubuntu-deb-update-config.yml'
            repo: '${{ inputs.update_repo }}'
            branch: '${{ inputs.update_branch }}'

    steps:
      - name: Check if skip this dispatch job
        if: >
          matrix.event == 'dispatch-release-update' && inputs.target_module == 'bootstrap' ||
          matrix.event == 'dispatch-test' && inputs.skip_test == true
        run: echo "skip=true" >> $GITHUB_ENV

      - uses: actions/checkout@v3
        if: env.skip != 'true'
        with:
          ref: ${{ inputs.janus_branch }}

      - name: Dispatch an action and get the run ID
        if: env.skip != 'true'
        uses: codex-/return-dispatch@v1
        id: return_dispatch
        with:
          token: ${{ secrets.ACTION_PAT }}
          ref: ${{ matrix.branch }}
          repo: ${{ matrix.repo }}
          owner: ${{ env.owner }}
          workflow:  ${{ matrix.workflow }}
          workflow_inputs: ${{ matrix.inputs }}
          workflow_timeout_seconds: 120

      - name: Await Run ID ${{ steps.return_dispatch.outputs.run_id }}
        if: env.skip != 'true'
        uses: Codex-/await-remote-run@v1.0.0
        with:
          token: ${{ secrets.ACTION_PAT }}
          repo: ${{ matrix.repo }}
          owner: ${{ env.owner }}
          run_id: ${{ steps.return_dispatch.outputs.run_id }}
          run_timeout_seconds: 600

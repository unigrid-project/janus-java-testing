name: Dispatcher

on:
  workflow_dispatch:
    inputs:
      repository:
        type: string
        description: 'Repository'
        default: 'unigrid-project/janus-java-testing'
        required: true
      branch:
        type: string
        description: 'Branch name'
        default: 'master'
        required: true
      wait_interval:
        type: number
        description: Wait interval
        default: 10
        required: true
      target_module:
        description: 'Target module'
        type: choice
        options:
        - fx
        - bootstrap
      tag_name:
        description: 'Tag name (vX.Y.Z)'
        required: true
        default: 'v1.0.30'
      parent_tag:
        description: 'Parent tag (vX.Y.Z)'
        required: false
        default: 'v1.0.35'
      skip_test:
        type: boolean
        description: Skip test
        default: false

env:
  GH_TOKEN: ${{ secrets.ACTION_PAT }}
  github_username: 'Github Actions'
  github_email: 'actions@github.com'

jobs:
  dispatcher:
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      max-parallel: 1
      matrix:
        release: ['test', 'dispatch-set-version', 'create-release', 'upload', 'bump']
        include:
          - release: test
            name: Test suite
            event: dispatch-test
            payload: '{"skip_test": "${{ inputs.skip_test }}"}'
            check: 'Maven test'
          - release: dispatch-set-version
            name: Set version & Remove snapshot
            event: dispatch-set-version
            payload: '{"target_module": "${{ inputs.target_module }}","tag_name": "${{ inputs.tag_name }}","parent_tag": "${{ inputs.parent_tag }}"}'
            check: 'Set version'
          - release: create-release
            name: Create release & tag
            event: dispatch-release
            payload: '{"target_module": "${{ inputs.target_module }}","tag_name": "${{ inputs.tag_name }}","parent_tag": "${{ inputs.parent_tag }}"}'
            check: 'Create release'
          - release: upload
            name: Upload to release tag
            event: dispatch-upload
            payload: '{"tag_name": "${{ inputs.tag_name }}_${{ inputs.target_module }}","target_module": "${{ inputs.target_module }}","skip": "false"}'
            check: 'Upload to release'
          - release: bump
            name: Bump version
            event: dispatch-bump
            payload: '{"target_module": "${{ inputs.target_module }}","skip": "false"}'
            check: 'Bump'

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - uses: peter-evans/repository-dispatch@v2
        name: Dispatch workflow - ${{ matrix.name }}
        with:
          token: ${{ secrets.Action_PAT }}
          repository: ${{ inputs.repository }}
          event-type: ${{ matrix.event }}
          client-payload: ${{ matrix.payload }}

      - name: Dispatch wait - ${{ matrix.name }}
        run: |
          export state="init"
          export command='gh run list -R ${{ inputs.repository }} -b "${{ inputs.branch }}" -w "${{ matrix.name }}" -u "${{ github.actor }}" --json status | jq ".[].status" | grep -qE "in_progress"'

          while [ $state != "completed" ]; do
            echo eval
            eval $command
            if [ ${state} == "init" && eval $command ]; then
              export state="in_progress"
            elif [ ${state} == "in_progress" && ! eval $command ]; then
              export state="completed"
            fi
            echo "Waiting for ${{ matrix.name }} to be completed..."
            sleep ${{ inputs.wait_interval }}
          done

name: Snapshot

on:
  repository_dispatch:
    types:
    - dispatch-snapshot
  workflow_dispatch:
    inputs:
      action:
        description: 'Action'
        type: choice
        options:
        - Remove
        - Add
      skip_fx:
        type: boolean
        description: Skip fx
        default: false
      skip_bootstrap:
        type: boolean
        description: Skip bootstrap
        default: false
      skip_desktop:
        type: boolean
        description: Skip desktop
        default: false
      generate_backup_poms:
        type: boolean
        description: Generate backup poms
        default: false
      update_matching_versions:
        type: boolean
        description: Update matching versions
        default: false

env:
  skip_parent: ${{ inputs.skip_parent }}
  skip_fx: ${{ inputs.skip_fx }}
  skip_bootstrap: ${{ inputs.skip_bootstrap }}
  skip_desktop: ${{ inputs.skip_desktop }}

jobs:
  snapshot:
    name: Snapshot action
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v3
      - run: 'echo "field: ${{ github.event.client_payload.action }}"'
      - run: 'echo "payload: ${{ toJson(github.event.client_payload) }}"'
      - run: 'echo "action: ${{ inputs.action }}"'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.6

      - name: Version checks
        run: |
          java --version
          mvn -v

      - name: Requires config build
        run: mvn -f config/pom.xml clean install -Dcheckstyle.skip -Dmaven.test.skip=true

      - name: Remove snapshot
        if: inputs.action == 'Remove' || github.event.client_payload.action == 'Remove'
        run: |
          mvn -f pom.xml versions:set -DremoveSnapshot=true -DgenerateBackupPoms=${{ inputs.generate_backup_poms }} -DupdateMatchingVersions=${{ inputs.update_matching_versions }}
          for module in fx bootstrap desktop; do
            if [[ $(printenv skip_$module) == false ]]; then
              mvn -f $module/pom.xml versions:set -DremoveSnapshot=true -DgenerateBackupPoms=${{ inputs.generate_backup_poms }} -DupdateMatchingVersions=${{ inputs.update_matching_versions }}
            fi
          done

      - name: Add snapshot
        if: inputs.action == 'Add' || github.event.client_payload.action == 'Add'
        run: |
          export "$(echo version_$(echo $module))=$(mvn -f pom.xml -q -DforceStdout help:evaluate -Dexpression=project.version)"
          if [[ $(printenv version_parent) != *-SNAPSHOT* ]]; then
            mvn -f pom.xml versions:set -DnewVersion=$(printenv version_$module)-SNAPSHOT -DgenerateBackupPoms=${{ inputs.generate_backup_poms }} -DupdateMatchingVersions=${{ inputs.update_matching_versions }}
          fi

          for module in fx bootstrap desktop; do
              export "$(echo version_$(echo $module))=$(mvn -f $(echo $module)/pom.xml -q -DforceStdout help:evaluate -Dexpression=project.version)"
              if [[ $(printenv skip_$module) == false && $(printenv version_$module) != *-SNAPSHOT* ]]; then
                mvn -f $module/pom.xml versions:set -DnewVersion=$(printenv version_$module)-SNAPSHOT -DgenerateBackupPoms=${{ inputs.generate_backup_poms }} -DupdateMatchingVersions=${{ inputs.update_matching_versions }}
              fi
          done

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Github actions - ${{ inputs.action }} snapshot 

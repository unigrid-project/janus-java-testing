name: Bump version

on:
  repository_dispatch:
    types:
    - dispatch-bump
  workflow_dispatch:
    inputs:
      distinct_id:
        type: string
        description: 'distinct_id used by return-dispatch'
      target_module:
        description: 'Target module'
        type: choice
        options:
        - bootstrap
        - fx
      bump:
        description: 'Bump version'
        type: choice
        options:
        - Revision
        - Minor
        - Major
      generate_backup_poms:
        type: boolean
        description: Generate backup poms
        default: false
      update_matching_versions:
        type: boolean
        description: Update matching versions
        default: false

env:
  skip_fx: ${{ inputs.skip_fx }}
  skip_bootstrap: ${{ inputs.skip_bootstrap }}
  skip_desktop: ${{ inputs.skip_desktop }}
  snapshot: "-SNAPSHOT"

jobs:
  bump:
    name: Bump
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: echo distinct ID ${{ inputs.distinct_id }}
        if: inputs.distinct_id != ''
        run: echo ${{ inputs.distinct_id }}

      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.6

      - name: Set env variable for dispatch
        run: |
          if [[ ${{ inputs.target_module }} == 'fx' ]]; then
            echo "skip_fx=false" >> $GITHUB_ENV
          elif [[ ${{ inputs.target_module }} == 'bootstrap' ]]; then
            echo "skip_bootstrap=false" >> $GITHUB_ENV
            echo "skip_desktop=false" >> $GITHUB_ENV
          fi

      - name: Requires config build
        run: xvfb-run -a mvn -f config/pom.xml install -Dcheckstyle.skip -Dmaven.test.skip=true

      - name: Bump version
        run: |
          for module in fx desktop bootstrap; do
            export version=$(mvn -f $(echo $module)/pom.xml -q -DforceStdout help:evaluate -Dexpression=project.version)
            export version=$(echo $version | awk -F. '{print $1"."$2"."$3}')
            mvn -f $module/pom.xml versions:set -DnewVersion=$(printenv version)${{ env.snapshot }} -DgenerateBackupPoms=${{ inputs.generate_backup_poms }} -DupdateMatchingVersions=${{ inputs.update_matching_versions }}

            if [[ $(printenv skip_$module) == 'false' ]]; then
              if [ "${{ inputs.bump }}" = "Major" ]; then
                export version=$(echo $version | awk -F. '{print $1+1".0.0"}')
              elif [ "${{ inputs.bump }}" = "Minor" ]; then
                export version=$(echo $version | awk -F. '{print $1"."$2+1".0"}')
              else
                export version=$(echo $version | awk -F. '{print $1"."$2"."$3+1}')
              fi

              mvn -f $module/pom.xml versions:set -DnewVersion=${version}${{ env.snapshot }} -DgenerateBackupPoms=${{ inputs.generate_backup_poms }} -DupdateMatchingVersions=${{ inputs.update_matching_versions }}
            fi
          done

          export version_parent=$(mvn -f pom.xml -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)
          mvn -f pom.xml versions:set -DnextSnapshot=true -DgenerateBackupPoms=${{ inputs.generate_backup_poms }} -DupdateMatchingVersions=${{ inputs.update_matching_versions }}

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Github actions - ${{ github.workflow }}

name: Dispatcher

on:
  workflow_dispatch:
    inputs:
      repository:
        type: string
        description: 'Repository'
        default: 'unigrid-project/janus-java-testing'
        required: true
      branch:
        type: string
        description: 'Branch name'
        default: 'master'
        required: true
      wait_interval:
        type: number
        description: Wait interval
        default: 5
        required: true
      target_module:
        description: 'Target module'
        type: choice
        options:
        - fx
        - bootstrap
      tag_name:
        description: 'Tag name (vX.Y.Z)'
        required: true
        default: 'v1.0.30'
      parent_tag:
        description: 'Parent tag (vX.Y.Z)'
        required: false
        default: 'v1.0.35'
      skip_test:
        type: boolean
        description: Skip test
        default: false

env:
  GH_TOKEN: ${{ secrets.ACTION_PAT }}
  github_username: 'Github Actions'
  github_email: 'actions@github.com'

jobs:
  dispatcher:
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      max-parallel: 1
      matrix:
        release: ['test', 'dispatch-set-version', 'create-release', 'upload', 'bump']
        include:
          - release: test
            name: Test suite
            event: dispatch-test
            inputs: '{ "skip_fx": "false" }'
            payload: '{"skip_test": "${{ inputs.skip_test }}"}'
            check: 'Maven test'
            workflow: 'ubuntu-deb-test-suite.yml'
          - release: dispatch-set-version
            name: Set version & Remove snapshot
            event: dispatch-set-version
            inputs: '{ "some_input": "value" }'
            payload: '{"target_module": "${{ inputs.target_module }}","tag_name": "${{ inputs.tag_name }}","parent_tag": "${{ inputs.parent_tag }}"}'
            check: 'Set version'
            workflow: 'ubuntu-deb-set-version.yml'
          - release: create-release
            name: Create release & tag
            event: dispatch-release
            inputs: '{ "some_input": "value" }'
            payload: '{"target_module": "${{ inputs.target_module }}","tag_name": "${{ inputs.tag_name }}","parent_tag": "${{ inputs.parent_tag }}"}'
            check: 'Create release'
            workflow: 'ubuntu-deb-release-create.yml'
          - release: upload
            name: Upload to release tag
            event: dispatch-upload
            inputs: '{ "some_input": "value" }'
            payload: '{"tag_name": "${{ inputs.tag_name }}_${{ inputs.target_module }}","target_module": "${{ inputs.target_module }}","skip": "false"}'
            check: 'Upload to release'
            workflow: 'upload.yml'
          - release: bump
            name: Bump version
            event: dispatch-bump
            inputs: '{ "some_input": "value" }'
            payload: '{"target_module": "${{ inputs.target_module }}","skip": "false"}'
            check: 'Bump'
            workflow: 'ubuntu-deb-bump.yml'

    steps:
      - name: echo distinct ID ${{ github.event.inputs.distinct_id }}
        run: echo ${{ github.event.inputs.distinct_id
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - name: Dispatch an action and get the run ID
        uses: codex-/return-dispatch@v1
        id: return_dispatch
        with:
          token: ${{ secrets.ACTION_PAT }}
          ref: ${{ inputs.branch }}
          repo: janus-java-testing
          owner: unigrid-project
          workflow:  ${{ matrix.workflow }}
          workflow_inputs: ${{ matrix.inputs }}
          workflow_timeout_seconds: 360

      - name: Use the output run ID
        run: echo ${{steps.return_dispatch.outputs.run_id}}

      - name: Await Run ID ${{ steps.return_dispatch.outputs.run_id }}
        uses: Codex-/await-remote-run@v1.0.0
        with:
          token: ${{ secrets.ACTION_PAT }}
          repo: janus-java-testing
          owner: unigrid-project
          run_id: ${{ steps.return_dispatch.outputs.run_id }}
          run_timeout_seconds: 360 # Optional